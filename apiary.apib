FORMAT: 1A

# OpenProject API v3
TODO: Description

# Group Hypermedia
TODO: Description & Resources

# Group Formats
TODO: Description and why only JSON

# Group HAL+JSON
HAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API.
Read more: http://stateless.co/hal_specification.html

**OpenProject API implementation of HAL+JSON format** enriches JSON and introduces a few meta properties:

    - `_type` - specifies the type of the resource (E.g.: WorkPackage, Project)
    - `_links` - contains all links available for the resource
    - `_embedded` - contains all embedded objects
    - `_collection` - contains the collection of objects
    - `_count` - number of records fetched in the response
    - `_total` - number of available records

# Group API response structure
Depending on the performed request, the OpenProject API will return a response in one of the following possible structures:

- As a **simple HAL+JSON object** (E.g.: GET /projects/:id)
- As a **collection of HAL+JSON objects** (E.g.: GET /projects)
- As a **collection of HTTP statuses and HAL+JSON objects** (E.g.: PATCH /projects?id[]=1&id[]=2)
- As an **OpenProject API error object**

### Simple HAL+JSON object
Contains its own data properties and some meta properties:

        {
            "id": 1,
            "name": "My awesome project",
            ...

            "_type": "Project",
            "_links": {
                "self": { "href": "/projects/1", "title": "My awesome project" },
                "update": { "href": "/projects/1", "method": "patch", "title": "Update My awesome project" },
                "delete": { "href": "/projects/1", "method": "delete", "title": "Delete My awesome project" }
            },
            "_embedded": {
                ...
            }
        }

### Collection of HAL+JSON objects
Contains collection of simple HAL+JSON objects in its `_collection` property. Also contains some collection
specific meta data:

    {
        "_collection": [{
            "id": 1,
            ...

            "_type": "Project"
            "_links": {
                "self": { "href": "/projects/1", "title": "My awesome project" },
                "update": { "href": "/projects/1", "method": "patch", "title": "Update My awesome project" },
                "delete": { "href": "/projects/1", "method": "delete", "title": "Delete My awesome project" }
            },
            "_embedded": {
                ...
            }
        }, {
            "id": 2,
            ...

            "_type": "Project"
            "_links": {
                "self": { "href": "/projects/2", "title": "My awesome project" },
                "update": { "href": "/projects/2", "method": "patch", "title": "Update My awesome project" },
                "delete": { "href": "/projects/2", "method": "delete", "title": "Delete My awesome project" }
            },
            "_embedded": {
                ...
            }
        }],
        "_type": "Project",
        "_links": {
            ...
        },
        "_count": 2,
        "_total": 476
    }

### Collection of HTTP statuses and HAL+JSON objects
Response with this structure will be returned by endpoints performing **batch operations** (e.g.: update multiple projects).
The main HTTP status code of the response will be `207 Multi-Status` and the response body will contain different response
codes based on the results of each individual operation.

For example if you perform a batch update request on multiple projects (`PATCH /projects`) it is possible that one project will
be updated successfully while the update of the other project will fail:

    {
        "_collection": [{
            "status": { "code": 200, "text": "Ok" },
            "object": {
                "id": 1,
                "name": "My awesome project",
                ...

                "_type": "Project",
                "_links": {
                    ...
                },
                "_embedded": {
                    ...
                }
            }
        }, {
            "status": { "code": 500, "text": "Internal Server Error" },
            "error": { "opCode": 51, "messages": [{ "key": "serverError", "text": "Something went wrong. Please try again latter." }]},
            "request": { requestParams }
        }],
        "_type": "Project",
        "_links": {
            ...
        }
    }

This allows you to see exactly what went wrong and inform the user.

### Error object

**TODO**


# Group Allowed HTTP methods

- `GET` - Get a single resource or collection of resources
- `POST` - Create a new resource or perform
- `PATCH` - Update a resource
- `DELETE` - Delete a resource

# Group Response codes

- `200 OK` - Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource.
- `201 Created` - The request has been fulfilled and resulted in a new resource being created
- `202 Accepted` - The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.
- `204 No content` - The server successfully processed the request, but is not returning any content. Usually used as a response to a successful delete request. Also returned for requests containing the If-Modified-Since header if the document is up-to-date.
- `207 Multi-Status` - The message body that follows can contain a number of separate response codes, depending on how many sub-requests were made.

- `301 Moved Permanently` - This and all future requests should be directed to the given
- `303 See Other` - The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message.

- `400 Bad Request` - The request cannot be fulfilled due to bad syntax.
- `401 Unauthorized` - Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided.
- `403 Forbidden` - The request was a valid request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference.
- `404 Not Found` - The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible.
- `405 Method Not Allowed` - A request was made of a resource using a request method not supported by that resource
- `406 Not Acceptable` - The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request.
- `422 Unprocessable Entity` - The request was well-formed but was unable to be followed due to semantic errors.

- `500 Internal Server Error` - A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.
- `501 Not Implemented` - The server either does not recognize the request method, or it lacks the ability to fulfill the request. Usually this implies future availability.
- `503 Service Unavailable` - The server is currently unavailable (because it is overloaded or down for maintenance).

# OpenProject API error objects
**TODO**

# Group Work packages

## Properties:
| Property | Description | Type | Constraints | Example | Supported operations |
|:---------:|-------------| ---- | ----------- | ------- | -------------------- |
| id | Work package id | Integer | Must be a positive integer | 12 | READ |
| subject | Work package subject | String | **REQUIRED** Must be a string of 255 or less characters | Refactor projecs module | READ / WRITE |
| type | | String | **REQUIRED** Must be one of the types enabled for the current work package's project | Feature | READ / WRITE |
| description | Work package description | String | | Projects module should be refactored ... | READ / WRITE |
| status | | String | **REQUIRED** ... | New | READ / WRITE |
| priority | | String | Must be one of the activated priorities | High | READ / WRITE |
| startDate | | Date | Must be a date in format YYYY-MM-DD and must be equal or greater than the soonest possible start date | 2014-05-21T08:51:20Z | READ / WRITE |
| dueDate | | Date | Must be a date in format YYYY-MM-DD and must be greater then start date | READ / WRITE |
| estimatedTime | | Object | Must be in form of a json object with "units" and "value" as keys and value must be an integer or a decimal | { "units": "hours", "value": 12 } | READ / WRITE |
| percentageDone | | Integer | Must be an integer between 0 and 100 | 50 | READ / WRITE |
| projectId | | Integer | **REQUIRED** Must be an id of one of the existing projects | 1 | READ / WRITE |
| projectName | | String | | My open project | READ |
| responsibleId | | Integer | Must be an id of one of the allowed responsible users for the work package | 12 | READ / WRITE |
| responsibleName | | String | | John Sheppard | READ |
| responsibleLogin | | String | | j.sheppard | READ |
| responsibleMail | | String | | j.sheppard@finn.de| READ |
| assigneeId | | Integer | Must be an id of one of the allowed assignees for the work package | 12 | READ / WRITE |
| assigneeName | | String | | John Sheppard | READ |
| assigneeLogin | | String | | j.sheppard | READ |
| assigneeMail | | String | | j.sheppard@finn.de| READ |
| authorName | | String | | John Sheppard | READ |
| authorLogin | | String | | j.sheppard | READ |
| authorMail | | String | | j.sheppard@finn.de| READ |
| createdAt | | Timestamp | Returned in ISO 8601 format - YYYY-MM-DDTHH:MM:SSZ | | READ |
| updatedAt | | Timestamp | Returned in ISO 8601 format - YYYY-MM-DDTHH:MM:SSZ | | READ |

This is [an example][id] reference-style link.

## WorkPackage [/work_packages/{id}]

+ Model
    + Body

            {
                "_type": "WorkPackage",
                "_links": {
                    "self": {
                        "href": "https://openproject.org/api/v3/work_packages/1",
                        "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                    },
                    "author": {
                        "href": "https://openproject.org/api/v3/users/1",
                        "title": "John Sheppard - j.sheppard"
                    },
                    "responsible": {
                        "href": "https://openproject.org/api/v3/users/1",
                        "title": "John Sheppard - j.sheppard"
                    },
                    "assignee": {
                        "href": "https://openproject.org/api/v3/users/1",
                        "title": "John Sheppard - j.sheppard"
                    },
                },
                "_embedded": {
                    "activities": [
                        {
                            "_type": "Activity::Comment",
                            "_links": {
                                "self": {
                                    "href": "https://openproject.org/api/v3/activity/1",
                                    "title": "Priority changed from High to Low"
                                },
                                "workPackage": {
                                    "href": "https://openproject.org/api/v3/work_packages/1",
                                    "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                                },
                                "user": {
                                    "href": "https://openproject.org/api/v3/users/1",
                                    "title": "John Sheppard - admin"
                                }
                            },
                            "id": 1,
                            "details": [
                                "Lorem ipsum dolor sit amet."
                            ],
                            "comment": "Lorem ipsum dolor sit amet.",
                            "createdAt": "2014-05-21T08:51:20Z",
                            "version": 31
                        }
                    ],
                    "watchers": [
                        {
                            "_type": "User",
                            "_links": {
                                "self": {
                                    "href": "https://openproject.org/api/v3/users/1",
                                    "title": "John Sheppard - j.sheppard"
                                }
                            },
                            "id": 1,
                            "login": "j.sheppard",
                            "firstName": "John",
                            "lastName": "Sheppard",
                            "mail": "shep@mail.com",
                            "avatar": "https://gravatar/avatar",
                            "createdAt": "2014-05-21T08:51:20Z",
                            "updatedAt": "2014-05-21T08:51:20Z"
                        }
                    ],
                    "relations": [
                        {
                            "_type": "Relationship",
                            "_links": {
                                "self": {
                                    "href": "https://openproject.org/api/v3/relationships/1",
                                    "title": "Work package A duplicated by Work package B"
                                },
                                "workPackage": {
                                    "href": "https://openproject.org/api/v3/work_packages/1",
                                    "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                                },
                                "relatedWorkPackage": {
                                    "href": "https://openproject.org/api/v3/work_packages/2",
                                    "title": "Lorem ipsum"
                                }
                            },
                            "id": 1,
                            "type": "duplicates",
                            "relatedWorkPackageId": 2,
                            "relatedWorkPackageSubject": "Lorem ipsum",
                            "relatedWorkPackageType": "Bug",
                            "relatedWorkPackageStartDate": "2014-05-29",
                            "relatedWorkPackageDueDate": "2014-08-29"
                        }
                    ],
                    "attachments": [
                        {
                            "_type": "Attachment",
                            "_links": {
                                "self": {
                                    "href": "https://openproject.org/api/v3/attachments/1",
                                    "title": "Attachment filename"
                                },
                                "workPackage": {
                                    "href": "https://openproject.org/api/v3/work_packages/1",
                                    "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                                },
                                "author": {
                                    "href": "https://openproject.org/api/v3/users/1",
                                    "title": "Users login"
                                }
                            },
                            "id": 1,
                            "filename": "Attachment filename",
                            "filesize": 30,
                            "contentType": "txt",
                            "description": "Lorem ipsum dolor sit amet.",
                            "authorName": "John Sheppard",
                            "authorLogin": "admin",
                            "authorMail": "admin@example.net",
                            "createdAt": "2014-05-21T08:51:20Z"
                        }
                    ]
                },
                "id": 1,
                "subject": "quis numquam qui voluptatum quia praesentium blanditiis nisi",
                "type": "Support",
                "description": "Crux vel eos dolores admoveo summa veritatis acerbitas. Deleo venustas cubo curtus balbus sumo ambitus valens. Tener cotidie angelus illo. Cito verto comburo. Tergeo vinculum succedo ullus suppono.",
                "status": "New",
                "priority": "Normal",
                "startDate": "2014-05-29",
                "dueDate": "2014-08-29",
                "estimatedTime": {
                    "units": "hours",
                    "value": 10
                },
                "percentageDone": 0,
                "targetVersionId": 1,
                "targetVersionName": "sprint-01",
                "projectId": 1,
                "projectName": "Seeded Project",
                "responsibleId": 1,
                "responsibleName": "OpenProject Admin",
                "responsibleLogin": "admin",
                "responsibleMail": "admin@example.net",
                "responsibleAvatar": "http://gravatar/avatar",
                "assigneeId": 22,
                "assigneeName": "Vivienne Windler",
                "assigneeLogin": "Yoshiko8884",
                "assigneeMail": "gabriel.osinski@glover.name",
                "assigneeAvatar": "http://gravatar/avatar",
                "authorName": "Delia Schneider",
                "authorLogin": "Layla3137",
                "authorMail": "charlene.terry@stromanko.org",
                "authorAvatar": "http://gravatar/avatar",
                "createdAt": "2014-05-21T08:51:20Z",
                "updatedAt": "2014-05-22T09:41:29Z",
                "customProperties": [
                    {
                        "name": "My custom field 1",
                        "format": "text",
                        "value": "Lorem ipsum"
                    }
                ]
            }

## View work package [GET]

+ Parameters
    + id (required, integer, `1`) ... Work package id

+ Response 200 (application/hal+json)

    [WorkPackage][]

# Group Queries

## Properties:
| Property | Description | Type | Constraints | Example | Supported operations |
|:---------:|-------------| ---- | ----------- | ------- | -------------------- |
| id | Query id | Integer | Must be a positive integer | 12 | READ |
| name | Query name | String | | My work packages query | READ / WRITE |
| projectId | | Integer | Must be an id of one of the existing projects | 1 | READ / WRITE |
| projectName | | String | | My open project | READ |
| userId | | Integer | | 1 | READ / WRITE |
| userName | | String | | John Sheppard | READ |
| userLogin | | String | | j.sheppard | READ |
| userMail | | String | | j.sheppard@finn.de| READ |
| filters | | String | | | READ / WRITE |
| isPublic | | Boolean | | true | READ / WRITE |
| columnNames | | String | | | READ / WRITE |
| sortCriteria | | String | | | READ / WRITE |
| groupBy | | String | | | READ / WRITE |
| displaySums | | Boolean | | true | READ / WRITE |
| isStarred | | Boolean | | true | READ / WRITE |

## Query [/queries/{id}]

+ Model
    + Body

            {
                "_type": "Query",
                "_links": {
                    "self": {
                        "href": "http://openproject.org/api/v3/queries/2",
                        "title": "My work packages"
                    }
                },
                "id": 2,
                "name": "My work packages",
                "projectId": 1,
                "projectName": "Seeded Project",
                "userId": 1,
                "userName": "OpenProject Admin",
                "userLogin": "admin",
                "userMail": "admin@example.net",
                "filters": [
                    {
                        "status_id": {
                            "operator": "o",
                            "values": null
                        }
                    },
                    {
                        "assigned_to_id": {
                            "operator": "=",
                            "values": [
                                "me"
                            ]
                        }
                    }
                ],
                "isPublic": "false",
                "columnNames": [
                    "type",
                    "status",
                    "priority",
                    "subject",
                    "assigned_to"
                ],
                "sortCriteria": [
                    [
                        "parent",
                        "desc"
                    ]
                ],
                "groupBy": null,
                "displaySums": "false",
                "isStarred": true
            }

## View query [GET]

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 200 (application/hal+json)

    [Query][]

## Star Query [/queries/{id}/star]

+ Model
    + Body

            {
                "_type": "Query",
                "_links": {
                    "self": {
                        "href": "http://openproject.org/api/v3/queries/2",
                        "title": "My work packages"
                    }
                },
                "id": 2,
                "name": "My work packages",
                "projectId": 1,
                "projectName": "Seeded Project",
                "userId": 1,
                "userName": "OpenProject Admin",
                "userLogin": "admin",
                "userMail": "admin@example.net",
                "filters": [
                    {
                        "status_id": {
                            "operator": "o",
                            "values": null
                        }
                    },
                    {
                        "assigned_to_id": {
                            "operator": "=",
                            "values": [
                                "me"
                            ]
                        }
                    }
                ],
                "isPublic": "false",
                "columnNames": [
                    "type",
                    "status",
                    "priority",
                    "subject",
                    "assigned_to"
                ],
                "sortCriteria": [
                    [
                        "parent",
                        "desc"
                    ]
                ],
                "groupBy": null,
                "displaySums": "false",
                "isStarred": true
            }

## Star query [PATCH]

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 200 (application/hal+json)

    [Star Query][]

## Unstar Query [/queries/{id}/unstar]

+ Model
    + Body

            {
                "_type": "Query",
                "_links": {
                    "self": {
                        "href": "http://openproject.org/api/v3/queries/2",
                        "title": "My work packages"
                    }
                },
                "id": 2,
                "name": "My work packages",
                "projectId": 1,
                "projectName": "Seeded Project",
                "userId": 1,
                "userName": "OpenProject Admin",
                "userLogin": "admin",
                "userMail": "admin@example.net",
                "filters": [
                    {
                        "status_id": {
                            "operator": "o",
                            "values": null
                        }
                    },
                    {
                        "assigned_to_id": {
                            "operator": "=",
                            "values": [
                                "me"
                            ]
                        }
                    }
                ],
                "isPublic": "false",
                "columnNames": [
                    "type",
                    "status",
                    "priority",
                    "subject",
                    "assigned_to"
                ],
                "sortCriteria": [
                    [
                        "parent",
                        "desc"
                    ]
                ],
                "groupBy": null,
                "displaySums": "false",
                "isStarred": false
            }

## Unstar query [PATCH]

+ Parameters
    + id (required, integer, `1`) ... Query id

+ Response 200 (application/hal+json)

    [Unstar Query][]

# Group Activities

## Properties:
| Property | Description | Type | Constraints | Example | Supported operations |
|:---------:|-------------| ---- | ----------- | ------- | -------------------- |
| id | Activity id | Integer | Must be a positive integer | 12 | READ |
| version | Activity version | Integer | Must be a positive integer | 31 | READ |
| userId | User id | Integer | Must be a positive integer | 12 | READ |
| userName | User name | String | | John Sheppard | READ |
| userLogin | User login | String | | admin | READ |
| userMail | User mail | String | | admin@example.net | READ |
| notes | | String | | Lorem ipsum dolor sit amet. | READ |
| details | | Array | | ["Priority changed from High to Low"] | READ |
| createdAt | | Timestamp | Returned in ISO 8601 format - YYYY-MM-DDTHH:MM:SSZ | | READ |


## Activity [/activities/{id}]

+ Model
    + Body

            {
                "_type": "Activity::Comment",
                "_links": {
                    "self": {
                        "href": "https://openproject.org/api/v3/activity/1",
                        "title": "Priority changed from High to Low"
                    },
                    "workPackage": {
                        "href": "https://openproject.org/api/v3/work_packages/1",
                        "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                    },
                    "user": {
                        "href": "https://openproject.org/api/v3/users/1",
                        "title": "John Sheppard - admin"
                    }
                },
                "id": 1,
                "details": [
                    "Lorem ipsum dolor sit amet."
                ],
                "comment": "Lorem ipsum dolor sit amet.",
                "createdAt": "2014-05-21T08:51:20Z",
                "version": 31
            }

## View activity [GET]

+ Parameters
    + id (required, integer, `1`) ... Activity id

+ Response 200 (application/hal+json)

    [Activity][]
    
# Group Users

## Properties:
| Property | Description | Type | Constraints | Example | Supported operations |
|:---------:|-------------| ---- | ----------- | ------- | -------------------- |
| id | User's id | Integer | Must be a positive integer | 12 | READ |
| login | User's login name | String | | j.sheppard | READ / WRITE |
| firstName | User's first name | String | | John | READ / WRITE |
| lastName | User's last name | String | | Sheppard | READ / WRITE |
| mail | User's email | String | | shep@mail.com | READ / WRITE |
| avatar | URL to user's avatar | String | | https://gravatar/avatar | READ |
| createdAt | | Timestamp | Returned in ISO 8601 format - YYYY-MM-DDTHH:MM:SSZ | | READ |
| updatedAt | | Timestamp | Returned in ISO 8601 format - YYYY-MM-DDTHH:MM:SSZ | | READ |


## User [/users/{id}]

+ Model
    + Body

            {
                "_type": "User",
                "_links": {
                    "self": {
                        "href": "https://openproject.org/api/v3/users/1",
                        "title": "John Sheppard - j.sheppard"
                    }
                },
                "id": 1,
                "login": "j.sheppard",
                "firstName": "John",
                "lastName": "Sheppard",
                "mail": "shep@mail.com",
                "avatar": "https://gravatar/avatar",
                "createdAt": "2014-05-21T08:51:20Z",
                "updatedAt": "2014-05-21T08:51:20Z"
            }

## View user [GET]

+ Parameters
    + id (required, integer, `1`) ... User id

+ Response 200 (application/hal+json)

    [User][]
